swagger: "2.0"
info:
  title: Odontologia
  description: Api para Odontología dentro del módulo de Salud del proyecto SIBUD
  version: "1.0"
  termsOfService: http://www.udistrital.edu.co/politicas-de-privacidad.pdf
  contact:
    email: baluist@correo.udistrital.edu.co
  license:
    name: BSD-3-Clause
    url: http://opensource.org/licenses/BSD-3-Clause
basePath: /Odontologia
paths:
  /Anamnesis/:
    get:
      tags:
      - Anamnesis
      description: consulta todos los registros de la tabla Anamnesis
      operationId: AnamnesisController.Get All
      parameters:
      - in: query
        name: query
        description: 'Filtro. Por ejemplo, col1: v1, col2: v2 ...'
        type: string
      - in: query
        name: fields
        description: Campos devueltos. Por ejemplo, col1, col2 ...
        type: string
      - in: query
        name: sortby
        description: Campos ordenados por. Por ejemplo, Col1, col2 ...
        type: string
      - in: query
        name: order
        description: El orden correspondiente a cada campo de clasificación, si es un valor único, se aplica a todos los campos de clasificación. Por ejemplo, desc, asc ...
        type: string
      - in: query
        name: limit
        description: Limite el tamaño del conjunto de resultados. Debe ser un número entero
        type: string
      - in: query
        name: offset
        description: Posición inicial del conjunto de resultados. Debe ser un número entero
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Anamnesis'
        "403":
          description: ""
    post:
      tags:
      - Anamnesis
      description: agregar un registro en la tabla Anamnesis
      operationId: AnamnesisController.Post
      parameters:
      - in: body
        name: body
        description: Cuerpo para el contenido de Anamnesis
        required: true
        schema:
          $ref: '#/definitions/models.Anamnesis'
      responses:
        "201":
          description: '{int} models.Anamnesis'
        "403":
          description: Cuerpo Vacío
  /Anamnesis/{id}:
    get:
      tags:
      - Anamnesis
      description: consultar un registro de la tabla Anamnesis por su id
      operationId: AnamnesisController.Get One
      parameters:
      - in: path
        name: id
        description: Id a consultar
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Anamnesis'
        "403":
          description: :id está vacío
    put:
      tags:
      - Anamnesis
      description: actualizar un registro de la tabla Anamnesis
      operationId: AnamnesisController.Put
      parameters:
      - in: path
        name: id
        description: Id del registro a actualizar
        required: true
        type: string
      - in: body
        name: body
        description: Cuerpo para el contenido de Anamnesis
        required: true
        schema:
          $ref: '#/definitions/models.Anamnesis'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Anamnesis'
        "403":
          description: :id no es entero
    delete:
      tags:
      - Anamnesis
      description: elimina un registro de la tabla Anamnesis
      operationId: AnamnesisController.Delete
      parameters:
      - in: path
        name: id
        description: Id del registro a eliminar
        required: true
        type: string
      responses:
        "200":
          description: '{string} borrado exitoso!'
        "403":
          description: Id vacío
  /ControlPlaca/:
    get:
      tags:
      - ControlPlaca
      description: consulta todos los registros de la tabla ControlPlaca
      operationId: ControlPlacaController.Get All
      parameters:
      - in: query
        name: query
        description: 'Filtro. Por ejemplo, col1: v1, col2: v2 ...'
        type: string
      - in: query
        name: fields
        description: Campos devueltos. Por ejemplo, col1, col2 ...
        type: string
      - in: query
        name: sortby
        description: Campos ordenados por. Por ejemplo, Col1, col2 ...
        type: string
      - in: query
        name: order
        description: El orden correspondiente a cada campo de clasificación, si es un valor único, se aplica a todos los campos de clasificación. Por ejemplo, desc, asc ...
        type: string
      - in: query
        name: limit
        description: Limite el tamaño del conjunto de resultados. Debe ser un número entero
        type: string
      - in: query
        name: offset
        description: Posición inicial del conjunto de resultados. Debe ser un número entero
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.ControlPlaca'
        "403":
          description: ""
    post:
      tags:
      - ControlPlaca
      description: agregar un registro en la tabla ControlPlaca
      operationId: ControlPlacaController.Post
      parameters:
      - in: body
        name: body
        description: Cuerpo para el contenido de ControlPlaca
        required: true
        schema:
          $ref: '#/definitions/models.ControlPlaca'
      responses:
        "201":
          description: '{int} models.ControlPlaca'
        "403":
          description: Cuerpo Vacío
  /ControlPlaca/{id}:
    get:
      tags:
      - ControlPlaca
      description: consultar un registro de la tabla ControlPlaca por su id
      operationId: ControlPlacaController.Get One
      parameters:
      - in: path
        name: id
        description: Id a consultar
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.ControlPlaca'
        "403":
          description: :id está vacío
    put:
      tags:
      - ControlPlaca
      description: actualizar un registro de la tabla ControlPlaca
      operationId: ControlPlacaController.Put
      parameters:
      - in: path
        name: id
        description: Id del registro a actualizar
        required: true
        type: string
      - in: body
        name: body
        description: Cuerpo para el contenido de ControlPlaca
        required: true
        schema:
          $ref: '#/definitions/models.ControlPlaca'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.ControlPlaca'
        "403":
          description: :id no es entero
    delete:
      tags:
      - ControlPlaca
      description: elimina un registro de la tabla ControlPlaca
      operationId: ControlPlacaController.Delete
      parameters:
      - in: path
        name: id
        description: Id del registro a eliminar
        required: true
        type: string
      responses:
        "200":
          description: '{string} borrado exitoso!'
        "403":
          description: Id vacío
  /Diagnostico/:
    get:
      tags:
      - Diagnostico
      description: consulta todos los registros de la tabla Diagnostico
      operationId: DiagnosticoController.Get All
      parameters:
      - in: query
        name: query
        description: 'Filtro. Por ejemplo, col1: v1, col2: v2 ...'
        type: string
      - in: query
        name: fields
        description: Campos devueltos. Por ejemplo, col1, col2 ...
        type: string
      - in: query
        name: sortby
        description: Campos ordenados por. Por ejemplo, Col1, col2 ...
        type: string
      - in: query
        name: order
        description: El orden correspondiente a cada campo de clasificación, si es un valor único, se aplica a todos los campos de clasificación. Por ejemplo, desc, asc ...
        type: string
      - in: query
        name: limit
        description: Limite el tamaño del conjunto de resultados. Debe ser un número entero
        type: string
      - in: query
        name: offset
        description: Posición inicial del conjunto de resultados. Debe ser un número entero
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Diagnostico'
        "403":
          description: ""
    post:
      tags:
      - Diagnostico
      description: agregar un registro en la tabla Diagnostico
      operationId: DiagnosticoController.Post
      parameters:
      - in: body
        name: body
        description: Cuerpo para el contenido de Diagnostico
        required: true
        schema:
          $ref: '#/definitions/models.Diagnostico'
      responses:
        "201":
          description: '{int} models.Diagnostico'
        "403":
          description: Cuerpo Vacío
  /Diagnostico/{id}:
    get:
      tags:
      - Diagnostico
      description: consultar un registro de la tabla Diagnostico por su id
      operationId: DiagnosticoController.Get One
      parameters:
      - in: path
        name: id
        description: Id a consultar
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Diagnostico'
        "403":
          description: :id está vacío
    put:
      tags:
      - Diagnostico
      description: actualizar un registro de la tabla Diagnostico
      operationId: DiagnosticoController.Put
      parameters:
      - in: path
        name: id
        description: Id del registro a actualizar
        required: true
        type: string
      - in: body
        name: body
        description: Cuerpo para el contenido de Diagnostico
        required: true
        schema:
          $ref: '#/definitions/models.Diagnostico'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Diagnostico'
        "403":
          description: :id no es entero
    delete:
      tags:
      - Diagnostico
      description: elimina un registro de la tabla Diagnostico
      operationId: DiagnosticoController.Delete
      parameters:
      - in: path
        name: id
        description: Id del registro a eliminar
        required: true
        type: string
      responses:
        "200":
          description: '{string} borrado exitoso!'
        "403":
          description: Id vacío
  /ExamenDental/:
    get:
      tags:
      - ExamenDental
      description: consulta todos los registros de la tabla ExamenDental
      operationId: ExamenDentalController.Get All
      parameters:
      - in: query
        name: query
        description: 'Filtro. Por ejemplo, col1: v1, col2: v2 ...'
        type: string
      - in: query
        name: fields
        description: Campos devueltos. Por ejemplo, col1, col2 ...
        type: string
      - in: query
        name: sortby
        description: Campos ordenados por. Por ejemplo, Col1, col2 ...
        type: string
      - in: query
        name: order
        description: El orden correspondiente a cada campo de clasificación, si es un valor único, se aplica a todos los campos de clasificación. Por ejemplo, desc, asc ...
        type: string
      - in: query
        name: limit
        description: Limite el tamaño del conjunto de resultados. Debe ser un número entero
        type: string
      - in: query
        name: offset
        description: Posición inicial del conjunto de resultados. Debe ser un número entero
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.ExamenDental'
        "403":
          description: ""
    post:
      tags:
      - ExamenDental
      description: agregar un registro en la tabla ExamenDental
      operationId: ExamenDentalController.Post
      parameters:
      - in: body
        name: body
        description: Cuerpo para el contenido de ExamenDental
        required: true
        schema:
          $ref: '#/definitions/models.ExamenDental'
      responses:
        "201":
          description: '{int} models.ExamenDental'
        "403":
          description: Cuerpo Vacío
  /ExamenDental/{id}:
    get:
      tags:
      - ExamenDental
      description: consultar un registro de la tabla ExamenDental por su id
      operationId: ExamenDentalController.Get One
      parameters:
      - in: path
        name: id
        description: Id a consultar
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.ExamenDental'
        "403":
          description: :id está vacío
    put:
      tags:
      - ExamenDental
      description: actualizar un registro de la tabla ExamenDental
      operationId: ExamenDentalController.Put
      parameters:
      - in: path
        name: id
        description: Id del registro a actualizar
        required: true
        type: string
      - in: body
        name: body
        description: Cuerpo para el contenido de ExamenDental
        required: true
        schema:
          $ref: '#/definitions/models.ExamenDental'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.ExamenDental'
        "403":
          description: :id no es entero
    delete:
      tags:
      - ExamenDental
      description: elimina un registro de la tabla ExamenDental
      operationId: ExamenDentalController.Delete
      parameters:
      - in: path
        name: id
        description: Id del registro a eliminar
        required: true
        type: string
      responses:
        "200":
          description: '{string} borrado exitoso!'
        "403":
          description: Id vacío
  /ExamenEstomatologico/:
    get:
      tags:
      - ExamenEstomatologico
      description: consulta todos los registros de la tabla ExamenEstomatologico
      operationId: ExamenEstomatologicoController.Get All
      parameters:
      - in: query
        name: query
        description: 'Filtro. Por ejemplo, col1: v1, col2: v2 ...'
        type: string
      - in: query
        name: fields
        description: Campos devueltos. Por ejemplo, col1, col2 ...
        type: string
      - in: query
        name: sortby
        description: Campos ordenados por. Por ejemplo, Col1, col2 ...
        type: string
      - in: query
        name: order
        description: El orden correspondiente a cada campo de clasificación, si es un valor único, se aplica a todos los campos de clasificación. Por ejemplo, desc, asc ...
        type: string
      - in: query
        name: limit
        description: Limite el tamaño del conjunto de resultados. Debe ser un número entero
        type: string
      - in: query
        name: offset
        description: Posición inicial del conjunto de resultados. Debe ser un número entero
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.ExamenEstomatologico'
        "403":
          description: ""
    post:
      tags:
      - ExamenEstomatologico
      description: agregar un registro en la tabla ExamenEstomatologico
      operationId: ExamenEstomatologicoController.Post
      parameters:
      - in: body
        name: body
        description: Cuerpo para el contenido de ExamenEstomatologico
        required: true
        schema:
          $ref: '#/definitions/models.ExamenEstomatologico'
      responses:
        "201":
          description: '{int} models.ExamenEstomatologico'
        "403":
          description: Cuerpo Vacío
  /ExamenEstomatologico/{id}:
    get:
      tags:
      - ExamenEstomatologico
      description: consultar un registro de la tabla ExamenEstomatologico por su id
      operationId: ExamenEstomatologicoController.Get One
      parameters:
      - in: path
        name: id
        description: Id a consultar
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.ExamenEstomatologico'
        "403":
          description: :id está vacío
    put:
      tags:
      - ExamenEstomatologico
      description: actualizar un registro de la tabla ExamenEstomatologico
      operationId: ExamenEstomatologicoController.Put
      parameters:
      - in: path
        name: id
        description: Id del registro a actualizar
        required: true
        type: string
      - in: body
        name: body
        description: Cuerpo para el contenido de ExamenEstomatologico
        required: true
        schema:
          $ref: '#/definitions/models.ExamenEstomatologico'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.ExamenEstomatologico'
        "403":
          description: :id no es entero
    delete:
      tags:
      - ExamenEstomatologico
      description: elimina un registro de la tabla ExamenEstomatologico
      operationId: ExamenEstomatologicoController.Delete
      parameters:
      - in: path
        name: id
        description: Id del registro a eliminar
        required: true
        type: string
      responses:
        "200":
          description: '{string} borrado exitoso!'
        "403":
          description: Id vacío
  /ExamenesComplementarios/:
    get:
      tags:
      - ExamenesComplementarios
      description: consulta todos los registros de la tabla ExamenesComplementarios
      operationId: ExamenesComplementariosController.Get All
      parameters:
      - in: query
        name: query
        description: 'Filtro. Por ejemplo, col1: v1, col2: v2 ...'
        type: string
      - in: query
        name: fields
        description: Campos devueltos. Por ejemplo, col1, col2 ...
        type: string
      - in: query
        name: sortby
        description: Campos ordenados por. Por ejemplo, Col1, col2 ...
        type: string
      - in: query
        name: order
        description: El orden correspondiente a cada campo de clasificación, si es un valor único, se aplica a todos los campos de clasificación. Por ejemplo, desc, asc ...
        type: string
      - in: query
        name: limit
        description: Limite el tamaño del conjunto de resultados. Debe ser un número entero
        type: string
      - in: query
        name: offset
        description: Posición inicial del conjunto de resultados. Debe ser un número entero
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.ExamenesComplementarios'
        "403":
          description: ""
    post:
      tags:
      - ExamenesComplementarios
      description: agregar un registro en la tabla ExamenesComplementarios
      operationId: ExamenesComplementariosController.Post
      parameters:
      - in: body
        name: body
        description: Cuerpo para el contenido de ExamenesComplementarios
        required: true
        schema:
          $ref: '#/definitions/models.ExamenesComplementarios'
      responses:
        "201":
          description: '{int} models.ExamenesComplementarios'
        "403":
          description: Cuerpo Vacío
  /ExamenesComplementarios/{id}:
    get:
      tags:
      - ExamenesComplementarios
      description: consultar un registro de la tabla ExamenesComplementarios por su id
      operationId: ExamenesComplementariosController.Get One
      parameters:
      - in: path
        name: id
        description: Id a consultar
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.ExamenesComplementarios'
        "403":
          description: :id está vacío
    put:
      tags:
      - ExamenesComplementarios
      description: actualizar un registro de la tabla ExamenesComplementarios
      operationId: ExamenesComplementariosController.Put
      parameters:
      - in: path
        name: id
        description: Id del registro a actualizar
        required: true
        type: string
      - in: body
        name: body
        description: Cuerpo para el contenido de ExamenesComplementarios
        required: true
        schema:
          $ref: '#/definitions/models.ExamenesComplementarios'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.ExamenesComplementarios'
        "403":
          description: :id no es entero
    delete:
      tags:
      - ExamenesComplementarios
      description: elimina un registro de la tabla ExamenesComplementarios
      operationId: ExamenesComplementariosController.Delete
      parameters:
      - in: path
        name: id
        description: Id del registro a eliminar
        required: true
        type: string
      responses:
        "200":
          description: '{string} borrado exitoso!'
        "403":
          description: Id vacío
  /Odontograma/:
    get:
      tags:
      - Odontograma
      description: consulta todos los registros de la tabla Odontograma
      operationId: OdontogramaController.Get All
      parameters:
      - in: query
        name: query
        description: 'Filtro. Por ejemplo, col1: v1, col2: v2 ...'
        type: string
      - in: query
        name: fields
        description: Campos devueltos. Por ejemplo, col1, col2 ...
        type: string
      - in: query
        name: sortby
        description: Campos ordenados por. Por ejemplo, Col1, col2 ...
        type: string
      - in: query
        name: order
        description: El orden correspondiente a cada campo de clasificación, si es un valor único, se aplica a todos los campos de clasificación. Por ejemplo, desc, asc ...
        type: string
      - in: query
        name: limit
        description: Limite el tamaño del conjunto de resultados. Debe ser un número entero
        type: string
      - in: query
        name: offset
        description: Posición inicial del conjunto de resultados. Debe ser un número entero
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Odontograma'
        "403":
          description: ""
    post:
      tags:
      - Odontograma
      description: agregar un registro en la tabla Odontograma
      operationId: OdontogramaController.Post
      parameters:
      - in: body
        name: body
        description: Cuerpo para el contenido de Odontograma
        required: true
        schema:
          $ref: '#/definitions/models.AccesoHOdontogramaistoriaClinica'
      responses:
        "201":
          description: '{int} models.Odontograma'
        "403":
          description: Cuerpo Vacío
  /Odontograma/{id}:
    get:
      tags:
      - Odontograma
      description: consultar un registro de la tabla Odontograma por su id
      operationId: OdontogramaController.Get One
      parameters:
      - in: path
        name: id
        description: Id a consultar
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Odontograma'
        "403":
          description: :id está vacío
    put:
      tags:
      - Odontograma
      description: actualizar un registro de la tabla Odontograma
      operationId: OdontogramaController.Put
      parameters:
      - in: path
        name: id
        description: Id del registro a actualizar
        required: true
        type: string
      - in: body
        name: body
        description: Cuerpo para el contenido de Odontograma
        required: true
        schema:
          $ref: '#/definitions/models.Odontograma'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Odontograma'
        "403":
          description: :id no es entero
    delete:
      tags:
      - Odontograma
      description: elimina un registro de la tabla Odontograma
      operationId: OdontogramaController.Delete
      parameters:
      - in: path
        name: id
        description: Id del registro a eliminar
        required: true
        type: string
      responses:
        "200":
          description: '{string} borrado exitoso!'
        "403":
          description: Id vacío
  /TipoOdontograma/:
    get:
      tags:
      - TipoOdontograma
      description: consulta todos los registros de la tabla OdontologiaTipoOdontograma
      operationId: TipoOdontogramaController.Get All
      parameters:
      - in: query
        name: query
        description: 'Filtro. Por ejemplo, col1: v1, col2: v2 ...'
        type: string
      - in: query
        name: fields
        description: Campos devueltos. Por ejemplo, col1, col2 ...
        type: string
      - in: query
        name: sortby
        description: Campos ordenados por. Por ejemplo, Col1, col2 ...
        type: string
      - in: query
        name: order
        description: El orden correspondiente a cada campo de clasificación, si es un valor único, se aplica a todos los campos de clasificación. Por ejemplo, desc, asc ...
        type: string
      - in: query
        name: limit
        description: Limite el tamaño del conjunto de resultados. Debe ser un número entero
        type: string
      - in: query
        name: offset
        description: Posición inicial del conjunto de resultados. Debe ser un número entero
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.OdontologiaTipoOdontograma'
        "403":
          description: ""
    post:
      tags:
      - TipoOdontograma
      description: agregar un registro en la tabla OdontologiaTipoOdontograma
      operationId: TipoOdontogramaController.Post
      parameters:
      - in: body
        name: body
        description: Cuerpo para el contenido de OdontologiaTipoOdontograma
        required: true
        schema:
          $ref: '#/definitions/models.OdontologiaTipoOdontograma'
      responses:
        "201":
          description: '{int} models.OdontologiaTipoOdontograma'
        "403":
          description: Cuerpo Vacío
  /TipoOdontograma/{id}:
    get:
      tags:
      - TipoOdontograma
      description: consultar un registro de la tabla OdontologiaTipoOdontograma por su id
      operationId: TipoOdontogramaController.Get One
      parameters:
      - in: path
        name: id
        description: Id a consultar
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.OdontologiaTipoOdontograma'
        "403":
          description: :id está vacío
    put:
      tags:
      - TipoOdontograma
      description: actualizar un registro de la tabla OdontologiaTipoOdontograma
      operationId: TipoOdontogramaController.Put
      parameters:
      - in: path
        name: id
        description: Id del registro a actualizar
        required: true
        type: string
      - in: body
        name: body
        description: Cuerpo para el contenido de AccesoHistoriaClinica
        required: true
        schema:
          $ref: '#/definitions/models.OdontologiaTipoOdontograma'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.OdontologiaTipoOdontograma'
        "403":
          description: :id no es entero
    delete:
      tags:
      - TipoOdontograma
      description: elimina un registro de la tabla OdontologiaTipoOdontograma
      operationId: TipoOdontogramaController.Delete
      parameters:
      - in: path
        name: id
        description: Id del registro a eliminar
        required: true
        type: string
      responses:
        "200":
          description: '{string} borrado exitoso!'
        "403":
          description: Id vacío
definitions:
  models.AccesoHOdontogramaistoriaClinica:
    title: AccesoHOdontogramaistoriaClinica
    type: object
  models.Anamnesis:
    title: Anamnesis
    type: object
    properties:
      Alergias:
        type: string
      AntecedenteFamiliar:
        type: string
      Cardiopatias:
        type: string
      Ceda:
        type: string
      Cepillado:
        type: string
      Chicle:
        type: string
      Diabetes:
        type: string
      Dulces:
        type: string
      EnfermedadRespiratoria:
        type: string
      Enjuague:
        type: string
      FiebreReumatica:
        type: string
      Fuma:
        type: string
      Hemorragias:
        type: string
      Hepatitis:
        type: string
      Hipertension:
        type: string
      HistoriaClinicaId:
        type: integer
        format: int64
      Id:
        type: integer
        format: int64
      Irradiaciones:
        type: string
      Medicamentos:
        type: string
      Otras:
        type: string
      Sinusitis:
        type: string
      Tratamiento:
        type: string
      UltimaVisita:
        type: string
        format: datetime
  models.ControlPlaca:
    title: ControlPlaca
    type: object
    properties:
      Fecha:
        type: string
        format: datetime
      HistoriaClinicaId:
        type: integer
        format: int64
      HojaHistoriaId:
        type: integer
        format: int64
      Id:
        type: integer
        format: int64
      IndiceActual:
        type: integer
        format: int64
      IndiceAnterior:
        type: integer
        format: int64
      Observaciones:
        type: string
      TipoOdontograma:
        $ref: '#/definitions/models.TipoOdontograma'
      Vestibulares:
        type: string
  models.Diagnostico:
    title: Diagnostico
    type: object
    properties:
      Diagnostico:
        type: string
      Evolucion:
        type: string
      HistoriaClinica:
        type: integer
        format: int64
      HojaHistoriaId:
        type: integer
        format: int64
      Id:
        type: integer
        format: int64
      Observaciones:
        type: string
      Pronostico:
        type: string
  models.ExamenDental:
    title: ExamenDental
    type: object
    properties:
      Abrasion:
        type: string
      HistoriaClinicaId:
        type: integer
        format: int64
      HojaHistoriaId:
        type: integer
        format: int64
      Id:
        type: integer
        format: int64
      Manchas:
        type: string
      Observaciones:
        type: string
      Oclusion:
        type: string
      Otros:
        type: string
      PatologiaPulpar:
        type: string
      PlacaBlanda:
        type: string
      PlacaCalcificada:
        type: string
      Supernumerarios:
        type: string
  models.ExamenEstomatologico:
    title: ExamenEstomatologico
    type: object
    properties:
      ArticulacionTemporo:
        type: string
      Carrillos:
        type: string
      GlandulasSalivares:
        type: string
      HistoriaClinicaId:
        type: integer
        format: int64
      HojaHistoriaId:
        type: integer
        format: int64
      Id:
        type: integer
        format: int64
      Labios:
        type: string
      Lengua:
        type: string
      Maxilares:
        type: string
      MusculosMasticadores:
        type: string
      Observaciones:
        type: string
      Paladar:
        type: string
      PisoBoca:
        type: string
      SenosMaxilares:
        type: string
      SistemaLinfatico:
        type: string
      SistemaNervioso:
        type: string
      SistemaRegional:
        type: string
      SistemaVascular:
        type: string
  models.ExamenesComplementarios:
    title: ExamenesComplementarios
    type: object
    properties:
      Coagulacion:
        type: string
      HistoriaClinicaId:
        type: integer
        format: int64
      HojaHistoriaId:
        type: integer
        format: int64
      Id:
        type: integer
        format: int64
      LaboratorioFinal:
        type: integer
        format: int64
      LaboratorioInicio:
        type: integer
        format: int64
      Otra:
        type: string
      OtraFinal:
        type: integer
        format: int64
      OtraInicio:
        type: integer
        format: int64
      PanoramicaFinal:
        type: integer
        format: int64
      PanoramicaInicio:
        type: integer
        format: int64
      PeriapicalFinal:
        type: integer
        format: int64
      PeriapicalInicio:
        type: integer
        format: int64
      Sangria:
        type: string
      Tp:
        type: string
      Tpt:
        type: string
  models.Odontograma:
    title: Odontograma
    type: object
    properties:
      Diagrama:
        type: string
      HistoriaClinicaId:
        type: integer
        format: int64
      Id:
        type: integer
        format: int64
      IdHojaHistoria:
        type: integer
        format: int64
      IdTipoOdontograma:
        $ref: '#/definitions/models.TipoOdontograma'
      Observaciones:
        type: string
  models.OdontologiaTipoOdontograma:
    title: OdontologiaTipoOdontograma
    type: object
  models.TipoOdontograma:
    title: TipoOdontograma
    type: object
    properties:
      Activo:
        type: boolean
      Descripcion:
        type: string
      FechaCreacion:
        type: string
        format: datetime
      FechaModificacion:
        type: string
        format: datetime
      Id:
        type: integer
        format: int64
      Nombre:
        type: string
